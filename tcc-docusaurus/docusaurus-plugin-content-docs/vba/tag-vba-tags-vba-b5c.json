{
  "label": "VBA",
  "permalink": "/vba/tags/vba",
  "allTagsPath": "/vba/tags",
  "count": 30,
  "items": [
    {
      "id": "vba-bug-finding",
      "title": "Bug Finding",
      "description": "A bug is an error in your programming. Here I cover the topic of programming bugs — how to identify them and how to remove them from your module.",
      "permalink": "/vba/vba-bug-finding"
    },
    {
      "id": "vba-controlling-flow-making-desicions",
      "title": "Controlling Program Flow and Making Decisions",
      "description": "Some VBA procedures start at the code’s beginning and progress line by line to the end, never deviating from this top-to-bottom program flow.",
      "permalink": "/vba/vba-controlling-flow-making-desicions"
    },
    {
      "id": "vba-declaring-and-scoping-of-variables",
      "title": "Declaring and Scoping of Variables",
      "description": "If you read the previous topics, you now know a bit about Variables and Data-types.",
      "permalink": "/vba/vba-declaring-and-scoping-of-variables"
    },
    {
      "id": "vba-executing-procedures",
      "title": "Executing Sub and Function Procedures",
      "description": "Although you may not know much about developing procedures at this point, I’m going to jump ahead a bit and discuss how to execute these procedures.",
      "permalink": "/vba/vba-executing-procedures"
    },
    {
      "id": "vba-if-then-structure-select-case",
      "title": "If-Then-Else and Select Case structure",
      "description": "If-Then is VBA’s most important control structure. You’ll probably use this command on a daily basis.",
      "permalink": "/vba/vba-if-then-structure-select-case"
    },
    {
      "id": "vba-programming-concepts",
      "title": "Programming Concepts, Comments and Data-types",
      "description": "Visual Basic for application (VBA) is a real, live programming language, it uses many elements common to all programming languages.",
      "permalink": "/vba/vba-programming-concepts"
    },
    {
      "id": "vba-publc-static-variable-life",
      "title": "Public, Static and Variable's Life",
      "description": "In the following sections we will discussed about following topics:",
      "permalink": "/vba/vba-publc-static-variable-life"
    },
    {
      "id": "vba-sub-and-function-procedure",
      "title": "Sub and Function Procedures",
      "description": "The VBA code that you write in the Visual Basic Editor is known as a procedure.",
      "permalink": "/vba/vba-sub-and-function-procedure"
    },
    {
      "id": "vba-variable-scope",
      "title": "Variable Scope",
      "description": "A variable’s scope determines which modules and procedures can use the variable.",
      "permalink": "/vba/vba-variable-scope"
    },
    {
      "id": "vba-arrays",
      "title": "VBA Arrays",
      "description": "Most programming languages support arrays. An array is a group of variables that share a common name.",
      "permalink": "/vba/vba-arrays"
    },
    {
      "id": "vba-assignment-statement-and-operator",
      "title": "VBA Assignment Statements And Operators",
      "description": "An assignment statement is a VBA statement that assigns the result of an expression to a variable or an object.",
      "permalink": "/vba/vba-assignment-statement-and-operator"
    },
    {
      "id": "vba-bug-reduction-tips",
      "title": "VBA Bug Reduction Tips",
      "description": "I can’t tell you how to completely eliminate bugs in your programs.",
      "permalink": "/vba/vba-bug-reduction-tips"
    },
    {
      "id": "vba-constant",
      "title": "VBA Constants",
      "description": "A variable’s value may (and usually does) change while your procedure is executing.",
      "permalink": "/vba/vba-constant"
    },
    {
      "id": "vba-debugger",
      "title": "VBA Debugger",
      "description": "In this section, I discuss the details of using the VBA debugging tools.",
      "permalink": "/vba/vba-debugger"
    },
    {
      "id": "vba-dialog-boxes",
      "title": "VBA Dialog Boxes",
      "description": "You can’t use VBA very long without being exposed to dialog boxes.",
      "permalink": "/vba/vba-dialog-boxes"
    },
    {
      "id": "vba-functions",
      "title": "VBA Functions",
      "description": "A function essentially performs a calculation and returns a single value.",
      "permalink": "/vba/vba-functions"
    },
    {
      "id": "vba-more-function",
      "title": "VBA Functions that do more",
      "description": "A few VBA functions go above and beyond the call of duty. Rather than simply return a value, these functions have some useful side effects.",
      "permalink": "/vba/vba-more-function"
    },
    {
      "id": "vba-other-dialog",
      "title": "VBA GetOpenFilename, GetSaveAsFilename and Getting a Folder Name",
      "description": "If your VBA procedure needs to ask the user for a filename, you could use the InputBox function.",
      "permalink": "/vba/vba-other-dialog"
    },
    {
      "id": "vba-inputbox-function",
      "title": "VBA InputBox Function",
      "description": "The VBA's InputBox function is useful for obtaining a single piece of information from the user.",
      "permalink": "/vba/vba-inputbox-function"
    },
    {
      "id": "vba-introduction",
      "title": "VBA Introduction",
      "description": "To understand Visual Basic for Application, lets look at the following questions.",
      "permalink": "/vba/vba-introduction"
    },
    {
      "id": "vba-looping",
      "title": "VBA Looping",
      "description": "The term looping refers to repeating a block of VBA statements numerous times.",
      "permalink": "/vba/vba-looping"
    },
    {
      "id": "vba-msgBox-function",
      "title": "VBA MsgBox Function",
      "description": "You’re probably already familiar with the VBA MsgBox function — I use it quite a bit in the examples.",
      "permalink": "/vba/vba-msgBox-function"
    },
    {
      "id": "vba-string-basic",
      "title": "VBA String Basics",
      "description": "The String data type represents a series of characters. This topic introduces the basic concepts of strings in Visual Basic.",
      "permalink": "/vba/vba-string-basic"
    },
    {
      "id": "vba-userform",
      "title": "VBA UserForms",
      "description": "A UserForm is useful if your VBA macro needs to get information from a user.",
      "permalink": "/vba/vba-userform"
    },
    {
      "id": "browse-solidworks-file",
      "title": "VBA Userforms - Browse SOLIDWORKS file(s)",
      "description": "Introduction",
      "permalink": "/vba/browse-solidworks-file"
    },
    {
      "id": "open-assembly-and-drawing-from-userform",
      "title": "VBA Userforms - Open new Assembly and Drawing document",
      "description": "In this post, we learn how can we Open new Assembly and Drawing document from a Visual Basic for Application's Userform.",
      "permalink": "/vba/open-assembly-and-drawing-from-userform"
    },
    {
      "id": "open-part-from-userform",
      "title": "VBA Userforms - Open new Part document",
      "description": "In this post, we learn how can we open a part document from a Visual Basic for Application's Userform.",
      "permalink": "/vba/open-part-from-userform"
    },
    {
      "id": "vba-variables",
      "title": "VBA Variables",
      "description": "VBA’s main purpose is to manipulate data. VBA stores the data in your computer’s memory; it may or may not end up on disk.",
      "permalink": "/vba/vba-variables"
    },
    {
      "id": "vbe-windows",
      "title": "VBE Windows",
      "description": "In this post we look following windows in Visual Basic Editor:",
      "permalink": "/vba/vbe-windows"
    },
    {
      "id": "vbe-editor",
      "title": "Visual Basic Editor (VBE)",
      "description": "Visual Basic Editor or VBE is a separate application in your CAD application.",
      "permalink": "/vba/vbe-editor"
    }
  ]
}